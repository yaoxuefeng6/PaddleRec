// Copyright (c) 2020 PaddlePaddle Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
import "user_info.proto";
package recall_server;
option cc_generic_services = false;
 
/*
{
    "logid": "xxx",             # log_id
    "user_info":{},             # 用户info
    "recall_id": "1",               # recall_id，方便debug，log_id+recall_id唯一确定
    "recall_type": "GlobalTrend",   # type
    "model_key": "GN",          # 模型key
    "user_key": "GN",           # 使用的user key
    "recall_num": 100           # 召回数量
}

*/
message RecallRequest {
    string log_id = 1;
    user_info.UserInfo user_info = 2;
    string recall_id = 3;
    string recall_type = 4;
    string model_key = 5;
    string user_key = 6;
    uint32 request_num = 7; // top k

    uint32 timeout = 8; // 设置预期超时限制，单位毫秒
};
 
message RecallResponse {
    message Error {
        // HTTP状态码
        uint32 code = 1;
        /*
        BAD_REQUEST = 400;  // 非法参数
        UNAUTHORIZED = 401; // 未授权
        QUOTA_EXCEED = 402; // 配额超限
        INTERNAL_SERVER_ERROR = 500; // 内部错误
        */
        string text = 2;
    };
    message ScorePair {
        string nid = 1;
        float score = 2;
    };

    Error error = 1;
    repeated ScorePair score_pairs = 2;
};
 
service RecallService {
    rpc recall(RecallRequest) returns (RecallResponse);
};
