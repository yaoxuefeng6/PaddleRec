# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import um_server_pb2 as um__server__pb2


class UserModelServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.search = channel.unary_unary(
                '/um_server.UserModelService/search',
                request_serializer=um__server__pb2.UserModelRequest.SerializeToString,
                response_deserializer=um__server__pb2.UserModelResponse.FromString,
                )
        self.update = channel.unary_unary(
                '/um_server.UserModelService/update',
                request_serializer=um__server__pb2.UpdateRequest.SerializeToString,
                response_deserializer=um__server__pb2.UpdateResponse.FromString,
                )


class UserModelServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def search(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserModelServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'search': grpc.unary_unary_rpc_method_handler(
                    servicer.search,
                    request_deserializer=um__server__pb2.UserModelRequest.FromString,
                    response_serializer=um__server__pb2.UserModelResponse.SerializeToString,
            ),
            'update': grpc.unary_unary_rpc_method_handler(
                    servicer.update,
                    request_deserializer=um__server__pb2.UpdateRequest.FromString,
                    response_serializer=um__server__pb2.UpdateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'um_server.UserModelService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserModelService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/um_server.UserModelService/search',
            um__server__pb2.UserModelRequest.SerializeToString,
            um__server__pb2.UserModelResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/um_server.UserModelService/update',
            um__server__pb2.UpdateRequest.SerializeToString,
            um__server__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
